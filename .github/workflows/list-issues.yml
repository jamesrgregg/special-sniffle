name: List Open Issues

on:
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY: ${{ secrets.GH_REPO }}

jobs:
  list_open_issues:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: List open issues
      id: list_issues
      run: |
        REPOSITORIES=("jamesrgregg/special-sniffle", "jamesrgregg/barlonsalon", "jamesrgregg/barlonsalon-actions" )
        ISSUE_LIST="" 
        for REPO in "${REPOSITORIES[@]}"; do
          ISSUES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_REPOSITORY/$REPO/issues?state=open")
          ISSUES_JSON=$(echo $ISSUES | jq '.' 2>/dev/null)
          if [ $? -ne 0 ]; then
            # If the response is not valid JSON, print the error message
            echo "Error: $(echo $ISSUES | jq '.message')"
            exit 1
          fi
          ISSUES_COUNT=$(echo $ISSUES_JSON)
          echo $ISSUES_COUNT 
          if [ $ISSUES_COUNT -gt 0 ]; then
            ISSUE_LIST="$ISSUE_LIST\n\n**$REPO**\n"
            for (( i=0; i<$ISSUES_COUNT; i++ )); do
              ISSUE_TITLE=$(echo $ISSUES_JSON | jq ".[$i].title")
              ISSUE_URL=$(echo $ISSUES_JSON | jq ".[$i].html_url")
              ISSUE_LIST="$ISSUE_LIST- $ISSUE_TITLE ($ISSUE_URL)\n"
            done
          fi
        done

        echo "## Open Issues\n$ISSUE_LIST"
